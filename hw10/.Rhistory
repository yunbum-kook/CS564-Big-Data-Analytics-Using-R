library(googleVis)
library(dplyr)
library(gapminder)
install.packages(c("gapminder","plotly","devtools","Rcpp","rCharts"))
install.packages(c("gapminder", "plotly", "devtools", "Rcpp", "rCharts"))
head(Fruits)
library(googleVis)
library(dplyr)
library(gapminder)
library(ggplot2);
library(plotly)
library(devtools)
library(Rcpp)
install_github('ramnathv/rCharts', force= TRUE)
library(rCharts)
require(reshape2)
head(Fruits)
bubble <- gvisBubbleChart(Fruits, idvar='Fruit',
xvar='Sales', yvar='Expenses',
colorvar='Year', sizevar='Profit')
plot(bubble)
dat = Fruits %>% group_by(Fruit) %>%
summarize(Sale=mean(Sales), Expense=mean(Expenses))
plot(gvisBubbleChart(Fruits))
plot(bubble)
head(Fruits)
plot(gvisBubbleChart(Fruits))
bubble <- gvisBubbleChart(Fruits, idvar='Fruit',
xvar='Sales', yvar='Expenses',
colorvar='Year', sizevar='Profit')
plot(bubble)
plot(bubble)
bubble <- gvisBubbleChart(Fruits,
xvar='Sales', yvar='Expenses')
plot(bubble)
bubble <- gvisBubbleChart(Fruits,
xvar='Sales', yvar='Expenses',
sizevar='Profit')
plot(bubble)
bubble <- gvisBubbleChart(Fruits,
xvar='Sales', yvar='Expenses',
sizevar='Profit', colorvar='Year')
plot(bubble)
bubble <- gvisBubbleChart(Fruits)
bubble <- gvisBubbleChart(Fruits,
xvar='Sales', yvar='Expenses')
plot(bubble)
plot(bubble)
bubble <- gvisBubbleChart(Fruits,
xvar='Sales', yvar='Expenses',
sizevar='Profit')
plot(bubble)
Frutis
Fruits
group_by(Fruit)
Frutis %>% group_by(Fruit)
Fruits %>% group_by(Fruit)
dat = Fruits %>% group_by(Fruit) %>%
summarize(Sale=mean(Sales), Expense=mean(Expenses))
dat
bar = gvisBarChart(dat, xvar = 'Fruit', yvar= c("Sale", "Expense"))
plot(bar)
plot(gvisBarChart(dat))
?gvisBarChart
bar = gvisBarChart(dat,
options=list(isStacked=TRUE, title="My Bar Chart"))
plot(bar)
bar = gvisBarChart(dat,
options=list(isStacked=TRUE,
title="My Bar Chart",
gvis.editor="Edit Me"))
bar = gvisColumnChartt(dat)
plot(bar)
bar = gvisColumnChart(dat)
plot(bar)
head(OpenClose)
ck = gvisCandlestickChart(OpenClose)
plot(ck)
ck = gvisCandlestickChart(OpenClose, xvar = 'Weekday',
low='Low', open="Open", close="Close",
high="High", options=list(legend='none'))
plot(ck)
ck = gvisCandlestickChart(OpenClose)
plot(ck)
ck = gvisCandlestickChart(OpenClose)
plot(ck)
head(airquality)
na.omit(airquality)
#
airquality
#
airquality
na.omit(airquality)
head(airquality)
# na.omit(airquality) = NA 들어간 row를 remove
aq = na.omit(airquality) %>% select(Ozone,Temp,Month) %>%
group_by(Month) %>%
summarize(OzoneMean=mean(Ozone), TempMean=mean(Temp))
aq
aq = data.frame(aq); head(aq)
aq = data.frame(aq); head(aq)
aq = data.frame(aq); head(aq)
Line = gvisLineChart(aq)
plot(Line)
Line = gvisLineChart(aq, xvar="Month", yvar=c("OzoneMean", "TempMean"),
options=list(gvis.editor="Edit me!"))
plot(Line)
Line = gvisLineChart(aq, xvar="Month", yvar=c("OzoneMean", "TempMean"),
options=list(gvis.editor="Edit me!"))
plot(Line)
Line = gvisLineChart(aq)
plot(Line)
#
str(mtcars)
mtcars %>%
ggvis(~wt, ~mpg)
#
library(ggvis)
str(mtcars)
mtcars %>%
ggvis(~wt, ~mpg)
mtcars %>%
ggvis(~wt, ~mpg, fill:="red")
mtcars %>%
ggvis(~wt, ~mpg, fill:="red") %>%
layer_points()
mtcars %>%
ggvis(~wt, ~mpg)
mtcars %>%
ggvis(~wt, ~mpg, fill:="red")
mtcars %>%
ggvis(~wt, ~mpg, fill:="red") %>%
layer_points()
mtcars %>%
ggvis(~wt, ~mpg, fill:="red", stroke:="black",
size:=input_slider(10,100,label="point size"),
opacity:=input_slider(0,1,label="opacity")) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~disp, stroke = ~vs) %>%
layer_points()
mtcars %>%
ggvis(~wt, ~mpg, fill=~vs) %>%
layer_points()
mtcars %>%
ggvis(~wt, ~mpg, fill:="red")
mtcars %>%
ggvis(~wt, ~mpg, fill=~vs) %>%
layer_points()
mtcars %>%
ggvis(~mpg, ~disp, size = ~vs) %>%
layer_points()
iris %>% group_by(Species) %>%
summarize(SubTotal=sum(Sepal.Length))
iris
iris %>% group_by(Species) %>%
summarize(SubTotal=sum(Sepal.Length))
iris %>%
ggvis(~Species, ~Sepal.Length,
fill:=input_select(c("red","green","blue"),
label="Fill Color")) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length)
iris %>%
ggvis(~Species, ~Sepal.Length) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length)
iris %>%
ggvis(~Species, ~Sepal.Length) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length, fill:=~Species) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length, fill:=~Species) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length, fill:=~Species) %>%
layer_bars(width=0.3)
iris %>%
ggvis(~Species, ~Sepal.Length) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length, fill:=~Species) %>%
layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length) %>% layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length, fill:=~Species) %>%
layer_bars()
iris %>%
ggvis(~Sepal.Length, ~Sepal.Width, fill=~Species,
size:= input_slider(10,50,label="point size"),
opacity:=input_slider(0.1,1,label="opacity")) %>%
layer_points()
iris %>%
ggvis(~Species, ~Sepal.Length, fill:=~Species) %>%
layer_bars()
iris %>%
ggvis(~Sepal.Length, ~Sepal.Width, fill=~Species)
iris %>%
ggvis(~Sepal.Length, ~Sepal.Width, fill=~Species,
size:= input_slider(10,50,label="point size"),
opacity:=input_slider(0.1,1,label="opacity")) %>%
layer_points()
iris %>%
ggvis(~Species, ~Sepal.Length, fill:=~Species) %>%
layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length, fill=~Species) %>%
layer_bars()
iris %>%
ggvis(~Species, ~Sepal.Length, fill=~Species) %>%
layer_bars(width=0.3)
#
str(gapminder)
head(gapminder)
class(gapminder)
tmp = gamminder %>% filter(year==1977)
tmp = gapminder %>% filter(year==1977)
tmp
gap = gapminder %>%
fiter(year==1977) %>% # year==1977인 row만 필터링 됨
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point() + scale_x_log10() + theme_bw()
gap = gapminder %>%
filter(year==1977) %>% # year==1977인 row만 필터링 됨
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point() + scale_x_log10() + theme_bw()
ggplotly(gap)
getwd()
setwd("/Users/Kook/Desktop/R_workspace/hw10/")
sc <- read.csv(SeoulClinic, header=TRUE)
getwd()
sc <- read.csv("SeoulClinic.csv", header=TRUE)
str(sc)
head(sc)
gvisColumnChart(sc)
plot(gvisColumnChart(sc))
head(sc)
plot(gvisColumnChart(sc, xvar="Clinic")
plot(gvisColumnChart(sc, xvar="Clinic"))
plot(gvisColumnChart(sc, xvar="Clinic"))
plot(gvisColumnChart(sc, yvar="Clinic"))
plot(gvisColumnChart(sc, yvar="Clinic"))
bar = gvisColumnChart(dat)
plot(bar)
head(sc)
?gvisColumnChart
t(sc)
class(t(sc))
as.data.frame(t(sc))
plot(gvisColumnChart(sc, xvar="Clinic"))
sc = as.data.frame(t(sc))
plot(gvisColumnChart(sc, xvar="Clinic"))
sc
names(sc)
sc[Clinic,:]
sc[Clinic,]
sc[1,]
colnames(sc) = sc[1,]
sc
sc = sc[-1,]
sc
sc$myfactor <- factor(row.names(sc))
sc
sc = as.data.frame(t(sc))
sc
# Problem 1
sc <- read.csv("SeoulClinic.csv", header=TRUE)
str(sc)
head(sc)
sc = as.data.frame(t(sc))
sc
sc[1,]
clinic <- sc$Clinic
(clinic <- sc$Clinic)
clinic
sc
# Problem 1
sc <- read.csv("SeoulClinic.csv", header=TRUE)
clinic <- sc$Clinic
clinic
# transpose all but the first column (name)
sc <- as.data.frame(t(sc[,-1]))
sc
colnames(sc) = clinic
sc
plot(gvisColumnChart(sc))
rownames(sc)
sc$region = rownames(sc)
plot(gvisColumnChart(sc))
plot(gvisColumnChart(sc,xvar="region"))
plot(gvisColumnChart(sc,xvar="region",options=list(title="Clinics in Seoul Area Distric")))
plot(gvisColumnChart(sc,xvar="region",options=list(title="Clinics in Seoul Area Distric",height=400)))
plot(gvisColumnChart(sc,xvar="region",options=
list(title="Clinics in Seoul Area Distric",
height=400, weight=500)))
plot(gvisColumnChart(sc,xvar="region",options=
list(title="Clinics in Seoul Area Distric",
height=400, width=400)))
plot(gvisColumnChart(sc,xvar="region",options=
list(title="Clinics in Seoul Area Distric",
height=400, width=2000)))
plot(gvisColumnChart(sc,xvar="region",options=
list(title="Clinics in Seoul Area Distric",
height=400)))
plot(gvisColumnChart(sc,xvar="region",options=
list(title="Clinics in Seoul Area Distric",
height=400, legend="top")))
# Problem 2
trees
### HW10 ###
###########
# Library
library(googleVis); library(ggivs);
### HW10 ###
###########
# Library
library(googleVis); library(ggvis);
# Problem 2
head(trees)
### HW10 ###
###########
# Library
library(googleVis); library(ggvis); library(dplyr)
trees %>%
ggvis(~Girth, ~Height, size=Volume,
fill:=input_select(c("red", "green", "blue")))
trees %>%
ggvis(~Girth, ~Height, size=~Volume,
fill:=input_select(c("red", "green", "blue")))
install.packages(c("TH.data", "rpart", "grid", "mvtnorm", "partykit", "rattle"));
install.packages(c("TH.data", "rpart", "grid", "mvtnorm", "partykit", "rattle"))
install.packages(c("TH.data", "rpart", "grid", "mvtnorm", "partykit", "rattle"))
install.packages(c("TH.data", "rpart", "grid", "mvtnorm", "partykit", "rattle"))
install.packages(c("TH.data", "rpart", "grid", "mvtnorm", "partykit", "rattle"))
install.packages(c("TH.data", "rpart", "grid", "mvtnorm", "partykit", "rattle"))
install.packages(c("TH.data", "rpart",
"grid", "mvtnorm", "partykit", "rattle"));
install.packages(c("TH.data", "rpart", "grid", "mvtnorm", "partykit", "rattle"))
